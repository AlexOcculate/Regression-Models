0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*(1-0.6)/100)
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
library(swirl)
swirl()
pt(q=2.5, df=15, lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(q=2, lower.tail = TRUE)
pnorm(q=2, lower.tail = FALSE)
mybin
pbinom(q=6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q=7, size = 8, prob = .5, lower.tail = T)
pbinom(q=7, size = 8, prob = .5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
myplot(34)
myplot(33,3)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(0.95)
pnorm(30+z, mean = 30, lower.tail = FALSE)
pnorm(30+z, mean = 32, lower.tail = FALSE)
pnorm(30+z, mean = 32, sd=1, lower.tail = FALSE)
pnorm(30+z, mean = 32, sd=2, lower.tail = FALSE)
pnorm(30+z*2, mean = 32, sd=2, lower.tail = FALSE)
power.t.test(n=16, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, n=26, sd=1, type = "one.sample", alt = "onesided")$delta
power.t.test(power = 0.8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = 0.8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
pValues
head(pValues)
sum(pValues) < .5
sum(pValues < .5)
sum(pValues < .05)
p.adjust(pValues, method = "bonferroni")
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues2, trueStatus)
table(pValues2 < 0.05, trueStatus)
24/500
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4 ~ parent, galton))
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + var Est)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dit)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(galton$parent ~ galton$child, galton)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals)/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit$sigma)
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- galton$child
mu <- mean(galton$child)
sTot <- sum(galton$child)^2 - meaa=galton$child
sTot <- sum(galton$child)^2 - mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(sum((fit$residuals)^2))
sRes <- deviance(sum((fit$residuals^2)))
sRes <- sqrt(deviance(galton$child)/(n-2))
sRes <- sqrt(deviance(fit)/(n-2))
sRes <- deviance(fit)
1- (sRes/sTot)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
data(galton)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, tree2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
plot(x, y)
abline
lm(y ~ x)
fit <- lm(y ~ x)
summary(fit)
abline(fit)
data(mtcars)
data(mtcars)
mtcars
head(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
sumCoef <- summary(fit)$coeffiecients
sumCoef
sumCoef <- summary(fit)$coefficients
fit
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[1,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[1,2]
head(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[1,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[1,2]
sumCoef[1,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[2,1]
sumCoef[1,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[1,1]
sumCoef[1,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[1,2]
predict(fit, data.frame(x=mean(x)), interval = "confidence")
predict(fit, data.frame(x=mean(mtcars$wt)), interval = "confidence")
predict(fit, data.frame(x=mean(wt)), interval = "confidence")
head(mtcars)
predict(fit, data.frame(x=mean(mtcars$wt)), interval = "confidence")
mtcars$wt
mean(mtcars$wt)
predict(fit, data.frame(x=3.21725, interval = "confidence")
)
predict(fit, data.frame(x=3.21725), interval = "confidence")
fit
?predict
predict(fit, data.frame(wt=mean(mtcars$wt)), interval = "confidence")
?mtcars
predict(fit, data.frame(wt=3, interval = "confidence")
predict(fit, data.frame(wt=3, interval = "confidence")
predict(fit, data.frame(wt=3), interval = "confidence")
head(mtcars)
predict(fit, data.frame(wt=3), interval = "confidence")
predict(fit, data.frame(wt=3), interval = "prediction")
summary(fit)$cof
summary(fit)$coef
summary(fit)$coef[2,2]
summary(fit)$coef[2,1]
sumCoef
(sumCoef[2,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[2,2])/2
(sumCoef[2,1] + c(-1,1)*qt(0.975, df = fit$df)*sumCoef[2,2])*2
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
c <- 5
fit <- lm(y ~ x)
summary(fit)$coef
fit2 <- lm(y ~ I(x+c))
summary(fit2)$coef
summary(fit2)$coef[1,1]
beta0 <- summary(fit)$coef[1,1]
beta1 <- summarty(fit)$coef[2,1]
beta1 <- summary(fit)$coef[2,1]
c(beta0, beta1)
beta0 - c*beta1
data(mtcars)
mtcars
fit <- lm(mpg ~ wt, mtcars)
fit2 <- lm(mpg ~ 1, mtcars)
summary(fit)
summary(fit)$sigma
fit$residuals
resid(fit)
resid(fit)^2
sum(resid(fit)^2)
sum_sq_err_with_int <- sum(resid(fit)^2)
sum_sq_err_no_int <- sum(resid(fit2)^2)
sum_sq_err_no_int
sum_sq_err_with_int/sum_sq_err_no_int
library(swirl)
swirl()
exit
exit()
require(datasets);data(InsectSprays); require(stats); require(ggplot2)
g = ggplot(data = InsectSprays, aes(y = count, x = spray, fill  = spray))
g = g + geom_violin(colour = "black", size = 2)
g = g + xlab("Type of spray") + ylab("Insect count")
g
summary(lm(count ~ spray, data = InsectSprays))$coef
data(mtcars)
mtcars
lm(mpg ~ as.factor(cyl) + wt, mtcars)
cyl <- as.factor(mtcars$cyl)
wt <- mtcars$wt
mpg <- mtcars$mpg
lm(mpg ~ cyl + wt)
fit <- lm(mpg ~ cyl + wt)
summary(fit)
fit <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
summary(fit)
fit2 <- lm(mpg ~ as.factor(cyl), mtcars)
summary(fit2)
fit2 <- lm(mpg ~ as.factor(cyl)*wt, mtcars)
fit2
summary(fit2)
fit2 <- lm(mpg ~ as.factor(cyl) + wt + cyl:wt, mtcars)
summary(fit2)
fit
fit2
anova(fit, fit2)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl, wt), data = mtcars)
compare <- anova(fit1, fit2)
compare$Pr
compare
data(mtcars)
head(mtcars)
fit1 <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
fit2 <- lm(mpg ~ as.factor(cyl) + wt + interaction(cyl, wt), mtcars)
summary(fit1)
summary(fit2)
anova(fit1, fit2)
fit2 <- lm(mpg ~ as.factor(cyl) + wt + cyl:wt, mtcars)
anova(fit1, fit2)
fit1 <- lm(mpg ~ factor(cyl) + wt, mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl,wt), mtcars)
anova(fit1, fit2)
fit2 <- lm(mpg ~ factor(cyl) + wt + wt:cyl, mtcars)
anova(fit1, fit2)
fit2 <- lm(mpg ~ factor(cyl) + wt + wt*cyl, mtcars)
anova(fit1, fit2)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl, wt), mtcars)
anova(fit1, fit2)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit1
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ I(wt) + factor(cyl), data = mtcars)
head(mtcars)
I(wt)
I(mtcars$wt)
I(mtcars$wt * 0.5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbeta(fit)
dfbetas(fit)
library(swirl)
swilr()
swirl()
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
coef(all) - coef(efit)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(sA[,2])
summary(InsectSprays[,2])
sapply
sapply(InsectSprays, class)
fit(count ~ spray, InsectSprays)
fit<-lm(count ~ spray, InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(SB)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coefficients[3] - fit$coefficients[2]) / 1.6011
(fit$coefficients[2] - fit$coefficients[3]) / 1.6011
(fit$coef[2] - fit$coef[3]) / 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
fit <- lm(Numeric ~ Year, hunger)
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"], hunger)
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"] ~ hunger$Year[hunger$Sex == "Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
View(out2)
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1- resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- summary(fit)$resid / summary(fit)$deviance
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/ (sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(sqrt(dy))/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which = 5)
install.packages("car")
swirl()
rpg1()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~. - Examination, swiss)
vif(mdl2)
mtcars
data(mtcars)
cor(mtcars)
?mtcars
pairs(mtcars)
head(mtcars)
cor(mtcars)
lm(mpg ~ ., mtcars)
summary(lm(mpg ~ ., mtcars))
vif(mtcars)
cor(mtcars)
lm(mpg ~ . - gear - wt - drat - display, mtcars)
lm(mpg ~ . - gear - wt - drat - disp, mtcars)
summary(lm(mpg ~ . - gear - wt - drat - disp, mtcars))
summary(lm(mpg ~ am, mtcars))
fit <- lm(mpg ~., mtcars)
summary(fit)
vif(fit)
fit2 <- lm(mpg ~ cyl + disp + hp + wt + am + carb, mtcars)
summary(fit2)
vif(fit2)
vif(fit)
summary(fit)
vif(fit)
fit2 <- lm(mpg ~. -disp, mtcars)
summary(fit2)
vif(fit2)
fit3 <- lm(mpg ~ . - cyl - disp, mtcars)
summary(fit3)
vif(fit3)
fit4 <- lm(mpg ~. - cyl - disp - hp - wt - qsec, mtcars)
summary(fit4)
fit4 <- lm(mpg ~. - cyl - disp - hp - wt, mtcars)
summary(fit4)
vif(fit4)
data(mtcars)
mtcars
str(mtcars)
fit1 <- lm(mpg ~ am, mtcars)
summary(fit1)
vif(fit1)
fit2 <- lm(mpg ~ am + cyl, mtcars)
summary(fit2)
fit <- lm(mpg ~., mtcars)
fit1
vif(fit)
summary(fit)
fit1 <- update(fit, mpg ~ am + wt)
fit
fit1 <- update(fit, mpg ~ am)
fit1
fit2 <- update(fit, mpg ~ am + wt)
anova(fit1, fit2)
fit3 <- update(fit, mpg ~ am + wt + cyl)
anova(fit1, fit2, fit3)
summary(fit3)
cor(mtcars)
fit4 <- update(fit, mpg ~ am + wt + cyl + hp)
anova(fit1:fit4)
anova(fit1,fit2, fit3, fit4)
fit1 <- update(fit, mpg ~ as.factor(am))
summary(fit1)
play <- lm(mpg ~ as.factor(am) + as.factor(cyl) + hp + wt, mtcars)
summary(play)
library(MASS)
View(mtcars)
play <- lm(mpg ~ as.factor(am) + as.factor(cyl) + as.factor(vs) + as.factor(gear) + as.factor(carb) + disp + hp + drat + wt + qsec, mtcars)
summary(play)
model_play <- stepAIC(play, direction = "both")
model_play$anova
play$anova
play
model_play$anova
best_play <- update(play, mpg ~ as.factor(am) + as.factor(cyl) + hp + wt)
summary(best_play)
play
summary(play)
rm(fit)
rm(fit1)
rm(fit2)
rm(fit3)
rm(fit4)
rm(play)
rm(best_play)
rm(model_play)
fit <- lm(mpg ~. mtcars)
fit <- lm(mpg ~., mtcars)
best_fit <- step(lm(mpg ~., mtcars))
new_fit <- lm(mpg ~ am + qsec + wt, mtcars)
summary(newfit)
summary(new_fit)
cor(mtcars)
?step
source('~/.active-rstudio-document', echo=TRUE)
data(mtcars)
cor(mtcars)
plot(mtcars)
plot(lm(mpg ~., mtcars))
plot(lm(mpg ~., mtcars), which = 5)
plot(lm(mpg ~., mtcars), which = 4)
plot(lm(mpg ~., mtcars), which)
fit <- lm(mpg ~., mtcars)
plot(fit)
mfrow(c(2,2))
par(mfrow(c(2,2)))
par(mfrow = c(2,2))
plot(fit)
pairs(mtcars)
summary(fit)
fit <- lm(mpg ~ as.factor(am), mtcars)
summary(fit)
fit_all <- lm(mpg ~ as.factor(cyl) + disp + hp + drat + wt + qsec + as.factor(vs) + as.factor(am) + as.factor(gear) + as.factor(carb), mtcars)
summary(fit_all)
cov(mtcars)
cor(mtcars)
summary(lm(mpg ~., mtcars))
cor(mtcars)
?mtcars
fit_new <- lm(mpg ~ as.factor(am) + wt + qsec, mtcars)
summary(fit_new)
cor(mtcars)
cor(mtcars)$wt
cor(mtcars)[3,]
cor(mtcars)[6,]
anova(fit, fit_new)
fit4 <- update(fit, mpg ~ as.factor(am) + wt + qsec + as.factor(carb))
anova(fit, fit_new, fit4)
fit4 <- update(fit, mpg ~ as.factor(am) + wt + qsec + as.factor(cyl))
anova(fit, fit_new, fit4)
fit4 <- update(fit, mpg ~ as.factor(am) + wt + qsec + hp)
anova(fit, fit_new, fit4)
plot(fit_new)
par(mfrow = c(2,2))
plot(fit_new)
summary(fit_new)
?mtcars
pairs(mtcars)
data(mtcars)
fit <- lm(mpg ~ as.factor(am), mtcars)
summary(fit)$coef
fit_all <- lm(mpg ~ ., mtcars)
summary(fit_all)
library(knitr)
setwd("~/Courses/Github/Coursera/Regression-Models")
setwd("~/Courses/Github/Coursera/Regression-Models/Project")
knit2pdf("mtcars.Rmd")
knit2pdf("mpg-am.Rmd")
library(rmarkdown)
knit2pdf("mpg-am.Rmd")
knit2pdf("mpg-am.Rmd")
